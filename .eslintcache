[{"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\index.js":"1","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\App.js":"2","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\reportWebVitals.js":"3","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\pages\\Home\\Home.jsx":"4","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Temperature\\Temperature.jsx":"5","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Length\\Length.jsx":"6","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Volume\\Volume.jsx":"7","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\length.js":"8","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\volume.js":"9","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\tempserv.js":"10"},{"size":500,"mtime":1611120131726,"results":"11","hashOfConfig":"12"},{"size":724,"mtime":1611254193634,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3322,"mtime":1611325437168,"results":"15","hashOfConfig":"12"},{"size":5129,"mtime":1611337558236,"results":"16","hashOfConfig":"12"},{"size":5775,"mtime":1611370260688,"results":"17","hashOfConfig":"12"},{"size":5108,"mtime":1611337098408,"results":"18","hashOfConfig":"12"},{"size":1154,"mtime":1611322675797,"results":"19","hashOfConfig":"12"},{"size":596,"mtime":1611337613199,"results":"20","hashOfConfig":"12"},{"size":679,"mtime":1611337667826,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1t2rr3n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\index.js",[],["47","48"],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\App.js",[],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\reportWebVitals.js",[],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\pages\\Home\\Home.jsx",[],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Temperature\\Temperature.jsx",["49","50","51","52"],"import React,{Component} from 'react';\r\nimport {AppBar,Card, MenuItem,TextField,Select,FormLabel} from '@material-ui/core'\r\nimport length from '../../assets/scale.png';\r\nimport temperature from '../../assets/temp.png';\r\nimport volumn from '../../assets/beaker.png';\r\nimport './temperature.css';\r\nimport TempServ from '../../services/tempserv.js'\r\n\r\nlet tempServ=new TempServ();\r\nvar tempresult=0;\r\n\r\nclass Temperature extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={setFromlen:'', setToId:'', setInputText:''}\r\n    }\r\n\r\n    textChange=(event)=>{\r\n        this.setState({setInputText:event.target.value});\r\n        this.state.setInputText=event.target.value;\r\n        this.tempresult=tempServ.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.tempresult);\r\n    }\r\n\r\n    handleChangeFrom=(event)=>{\r\n        this.setState({setFromlen:event.target.value});\r\n        this.state.setFromlen=event.target.value;\r\n        this.tempresult=tempServ.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.tempresult);\r\n    }\r\n\r\n    handleChangeTo=(event)=>{\r\n        this.setState({setToId:event.target.value});\r\n        this.state.setToId=event.target.value;\r\n        this.tempresult=tempServ.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.tempresult);\r\n    }\r\n\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/temp\");\r\n    }\r\n\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/length\");\r\n    }\r\n\r\n    hadleVolume=()=>{\r\n        this.props.history.push(\"/volume\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"homeContainer\">\r\n            <AppBar id=\"welcomeBar\">\r\n                <h1>Welcome to Quantity Measurement </h1>\r\n            </AppBar>\r\n            <div id=\"chooseType\">\r\n                        <FormLabel>CHOOSE TYPE</FormLabel>\r\n                    </div> \r\n            <div className=\"cardContainer\">\r\n            <Card id=\"length\" onClick={this.handleLength}>\r\n                        <div id=\"imgLen\">\r\n                            <img src={length} alt=\"length\"/>\r\n                        </div>\r\n                           <FormLabel id=\"lengthLabel2\"> Length</FormLabel>\r\n                        </Card>\r\n                        <Card id=\"temperatureCardT\" onClick={this.handleTemp}>\r\n                        <div id=\"imgLen\" >\r\n                            <img src={temperature} alt=\"temperature\"/>\r\n                        </div>\r\n                            <FormLabel id=\"temperatureLable2\"> Temperature</FormLabel>\r\n                        </Card>\r\n                        <Card id=\"volumn\" onClick={this.hadleVolume}>\r\n                        <div id=\"imgLen\">\r\n                            <img src={volumn} alt=\"volumn\"/>\r\n                        </div>\r\n                            <FormLabel id=\"volumeLabel2\">Volume</FormLabel>                     \r\n                        </Card>\r\n                    </div>\r\n            <div className=\"converterContainer\">\r\n                <div>\r\n                <div id=\"labelCol\"><FormLabel id=\"select-label\">FROM</FormLabel></div>\r\n                <div id=\"convertFromContainer\">\r\n                <div><TextField className=\"TextField\" value={this.state.setInputText} \r\n                            onChange={this.textChange} type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.setFromlen} onChange={this.handleChangeFrom}>\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    <MenuItem value={1}>Celsius</MenuItem>\r\n                    <MenuItem value={33}>Fahrenheit</MenuItem> \r\n                    <MenuItem value={274}>Kelvin</MenuItem>            \r\n                </Select>  \r\n                </div>\r\n                </div>\r\n                \r\n                <div id=\"labelCol2\">\r\n                <FormLabel id=\"select-label\">TO</FormLabel>\r\n                <div id=\"convertToContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" value={this.tempresult} variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.setToId} onChange={this.handleChangeTo}>\r\n                        <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                        <MenuItem value={1}>Celsius</MenuItem>\r\n                        <MenuItem value={2}>Fahrenheit</MenuItem> \r\n                        <MenuItem value={3}>Kelvin</MenuItem> \r\n                </Select>\r\n                </div>\r\n                </div>\r\n            </div>                         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Temperature;","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Length\\Length.jsx",["53","54","55","56"],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\components\\Volume\\Volume.jsx",["57","58","59","60"],"import React,{ Component} from 'react';\r\nimport {AppBar,Card, MenuItem,TextField,Select,FormLabel} from '@material-ui/core'\r\nimport length from '../../assets/scale.png';\r\nimport temperature from '../../assets/hot.png';\r\nimport volumn from '../../assets/volume.png';\r\nimport './volume.css';\r\nimport VolumeServ from '../../services/volume.js'\r\n\r\nlet volObj=new VolumeServ();\r\nvar result=0;\r\n\r\nclass Volume extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={setFromlen:'', setToId:'', setInputText:''}\r\n    }\r\n\r\n    textChange=(event)=>{\r\n        this.setState({setInputText:event.target.value});\r\n        this.state.setInputText=event.target.value;\r\n        this.result=volObj.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.result);\r\n\r\n    }\r\n\r\n    handleChangeFrom=(event)=>{\r\n        this.setState({setFromlen:event.target.value});\r\n        this.state.setFromlen=event.target.value;\r\n        this.result=volObj.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.result);\r\n\r\n    }\r\n\r\n    handleChangeTo=(event)=>{\r\n        this.setState({setToId:event.target.value});\r\n        this.state.setToId=event.target.value;\r\n        this.result=volObj.Calculate(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(this.state.setInputText,this.state.setFromlen,this.state.setToId);\r\n        console.log(\"conversion : \",this.result);\r\n\r\n    }\r\n\r\n    handleTemp=()=>{\r\n        this.props.history.push(\"/temp\");\r\n    }\r\n\r\n    handleLength=()=>{\r\n        this.props.history.push(\"/length\");\r\n    }\r\n\r\n    hadleVolume=()=>{\r\n        this.props.history.push(\"/volume\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"homeContainer\">\r\n            <AppBar id=\"welcomeBar\">\r\n                <h1>Welcome to Quantity Measurement </h1>\r\n            </AppBar>\r\n            <div id=\"chooseType\">\r\n                        <FormLabel>CHOOSE TYPE</FormLabel>\r\n                    </div> \r\n            <div className=\"cardContainer\">\r\n                        <Card id=\"length\" onClick={this.handleLength}>\r\n                        <div id=\"imgLen\">\r\n                            <img src={length} alt=\"length\"/>\r\n                        </div>\r\n                        \r\n                           <FormLabel id=\"lengthLabel1\"> Length</FormLabel>\r\n                        \r\n                        </Card>\r\n                        <Card id=\"temperature\" onClick={this.handleTemp}>\r\n                        <div id=\"imgLen\" >\r\n                            <img src={temperature} alt=\"temperature\"/>\r\n                        </div>\r\n                            <FormLabel id=\"temperatureLable1\"> Temperature</FormLabel>\r\n                        </Card>\r\n                        <Card id=\"volumnI\" onClick={this.hadleVolume}>\r\n                        <div id=\"imgLen\">\r\n                            <img src={volumn} alt=\"volumn\"/>\r\n                        </div>\r\n                            <FormLabel id=\"volumeLabel1\">Volume</FormLabel>                     \r\n                        </Card>\r\n                    </div>\r\n            <div className=\"converterContainer\">\r\n                <div>\r\n                <div id=\"labelCol\"><FormLabel id=\"select-label\">FROM</FormLabel></div>\r\n                <div id=\"convertFromContainer\">\r\n                <div><TextField className=\"TextField\" value={this.state.setInputText} \r\n                            onChange={this.textChange} type=\"number\" variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                  \r\n                <Select className=\"selectID\" value={this.state.setFromlen} onChange={this.handleChangeFrom}>\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    <MenuItem value={1}>Milliliters</MenuItem>\r\n                    <MenuItem value={1000}>Litters</MenuItem>\r\n                    <MenuItem value={3785}>Gallons</MenuItem>\r\n                </Select>  \r\n                </div>\r\n                </div>\r\n                <div id=\"labelCol2\">\r\n                <FormLabel id=\"select-label\">TO</FormLabel>\r\n                <div id=\"convertToContainer\">\r\n                <div><TextField className=\"TextField\" type=\"number\" value={this.result} variant=\"outlined\" size=\"small\" ></TextField></div>\r\n                <Select className=\"selectID\" value={this.state.setToId} onChange={this.handleChangeTo}>\r\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                    <MenuItem value={1}>Milliliters</MenuItem>\r\n                    <MenuItem value={2}>Litters</MenuItem>\r\n                    <MenuItem value={3}>Gallons</MenuItem>\r\n                </Select>\r\n                </div>\r\n                </div>\r\n            </div>                         \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Volume;","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\length.js",["61"],"class length{\r\n\r\n    Calculate(value,from,to)\r\n    {\r\n        if(value==null || from==null || to==null)\r\n        {\r\n            return null;\r\n        }\r\n\r\n        var inches=0;\r\n        \r\n        switch(to){\r\n            case 1:\r\n                this.inches=value*from;\r\n                return this.inches/39370;\r\n            case 2:\r\n                this.inches=value*from;\r\n                return this.inches/39;\r\n            case 3:\r\n                this.inches=value*from;\r\n                return this.inches/0.393701;\r\n            case 4:\r\n                this.inches=value*from;\r\n                return this.inches/0.0393701;\r\n            case 5:\r\n                this.inches=value*from;\r\n                return this.inches/0.00003937;\r\n            case 6:\r\n                this.inches=value*from;\r\n                return this.inches/63360;\r\n            case 7:\r\n                this.inches=value*from;\r\n                return this.inches/12;\r\n            case 8:\r\n                this.inches=value*from;\r\n                return this.inches/1;\r\n            default:\r\n\r\n                return null;\r\n        }\r\n    }\r\n}\r\nexport default length;\r\n\r\n\r\n","C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\volume.js",[],"C:\\Users\\NKS\\Desktop\\REACT_APPS\\quntity_mesurement\\src\\services\\tempserv.js",["62"],"class tempserv{\r\n\r\n    Calculate(value,from,to)\r\n    {\r\n        if(value==null || from==null || to==null)\r\n        {\r\n            return null;\r\n        }\r\n        switch(to){\r\n            case 1:\r\n                var celsius=value*from;\r\n                return celsius/1;\r\n            case 2:\r\n                if(to==2){\r\n                    return value\r\n                }\r\n                else{\r\n                    var fahrenheit= (value * 1.8) + 32\r\n                    return fahrenheit;\r\n                }\r\n            case 3:\r\n                return (273.15+(value));\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\nexport default tempserv;\r\n\r\n\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":10,"column":5,"nodeType":"69","messageId":"70","endLine":10,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":20,"column":9,"nodeType":"73","endLine":20,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":28,"column":9,"nodeType":"73","endLine":28,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":36,"column":9,"nodeType":"73","endLine":36,"endColumn":19},{"ruleId":"67","severity":1,"message":"74","line":10,"column":5,"nodeType":"69","messageId":"70","endLine":10,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":20,"column":9,"nodeType":"73","endLine":20,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":29,"column":9,"nodeType":"73","endLine":29,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":38,"column":9,"nodeType":"73","endLine":38,"endColumn":19},{"ruleId":"67","severity":1,"message":"74","line":10,"column":5,"nodeType":"69","messageId":"70","endLine":10,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":20,"column":9,"nodeType":"73","endLine":20,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":29,"column":9,"nodeType":"73","endLine":29,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":38,"column":9,"nodeType":"73","endLine":38,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":10,"column":13,"nodeType":"69","messageId":"70","endLine":10,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":14,"column":22,"nodeType":"78","messageId":"79","endLine":14,"endColumn":24},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'tempresult' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'result' is assigned a value but never used.","'inches' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]